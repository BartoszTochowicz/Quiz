{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bartek\\\\OneDrive\\\\Pulpit\\\\GitHub\\\\Quiz\\\\frontend\\\\src\\\\pages\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [token, setToken] = useState([]);\n  const [idx, setIdx] = useState(0);\n  const [score, setScore] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(\"/quiz/singleplayer\").then(res => setQuestions(res.data)).catch(() => alert(\"Error loading questions\"));\n  }, []);\n  function handleAnswer(ansKey) {\n    const isCorrect = questions[idx].correct_answers[`${ansKey}_correct`] === \"true\";\n    if (isCorrect) setScore(s => s + 1);\n    if (idx + 1 < questions.length) {\n      setIdx(i => i + 1);\n    } else {\n      navigate(\"/result\", {\n        state: {\n          score,\n          total: questions.length\n        }\n      });\n    }\n  }\n  if (!questions.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(QuestionCard, {\n      question: questions[idx].question,\n      answers: questions[idx].answers,\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Question \", idx + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"AANHHSLn1HUedXfpBxWBuKV7kSk=\", false, function () {\n  return [useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","QuestionCard","useNavigate","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","answers","setAnswers","token","setToken","idx","setIdx","score","setScore","navigate","get","then","res","data","catch","alert","handleAnswer","ansKey","isCorrect","correct_answers","s","length","i","state","total","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/Bartek/OneDrive/Pulpit/GitHub/Quiz/frontend/src/pages/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Quiz() {\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [token, setToken] = useState([]);\n\n  const [idx, setIdx] = useState(0);\n  const [score, setScore] = useState(0);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios.get(\"/quiz/singleplayer\")\n      .then(res => setQuestions(res.data))\n      .catch(() => alert(\"Error loading questions\"));\n  }, []);\n\n  function handleAnswer(ansKey) {\n    const isCorrect = questions[idx].correct_answers[`${ansKey}_correct`] === \"true\";\n    if (isCorrect) setScore(s => s + 1);\n    if (idx + 1 < questions.length) {\n      setIdx(i => i + 1);\n    } else {\n      navigate(\"/result\", { state: { score, total: questions.length } });\n    }\n  }\n\n  if (!questions.length) return <div>Loading...</div>;\n\n  return (\n    <div className=\"container\">\n      <QuestionCard\n        question={questions[idx].question}\n        answers={questions[idx].answers}\n        onAnswer={handleAnswer}\n      />\n      <p>\n        Question {idx + 1} of {questions.length}\n      </p>\n    </div>\n  );\n}\n\nexport default Quiz;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMmB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACdC,KAAK,CAACkB,GAAG,CAAC,oBAAoB,CAAC,CAC5BC,IAAI,CAACC,GAAG,IAAIZ,YAAY,CAACY,GAAG,CAACC,IAAI,CAAC,CAAC,CACnCC,KAAK,CAAC,MAAMC,KAAK,CAAC,yBAAyB,CAAC,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,YAAYA,CAACC,MAAM,EAAE;IAC5B,MAAMC,SAAS,GAAGnB,SAAS,CAACM,GAAG,CAAC,CAACc,eAAe,CAAC,GAAGF,MAAM,UAAU,CAAC,KAAK,MAAM;IAChF,IAAIC,SAAS,EAAEV,QAAQ,CAACY,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;IACnC,IAAIf,GAAG,GAAG,CAAC,GAAGN,SAAS,CAACsB,MAAM,EAAE;MAC9Bf,MAAM,CAACgB,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,MAAM;MACLb,QAAQ,CAAC,SAAS,EAAE;QAAEc,KAAK,EAAE;UAAEhB,KAAK;UAAEiB,KAAK,EAAEzB,SAAS,CAACsB;QAAO;MAAE,CAAC,CAAC;IACpE;EACF;EAEA,IAAI,CAACtB,SAAS,CAACsB,MAAM,EAAE,oBAAOzB,OAAA;IAAA6B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEnD,oBACEjC,OAAA;IAAKkC,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxB7B,OAAA,CAACH,YAAY;MACXsC,QAAQ,EAAEhC,SAAS,CAACM,GAAG,CAAC,CAAC0B,QAAS;MAClC9B,OAAO,EAAEF,SAAS,CAACM,GAAG,CAAC,CAACJ,OAAQ;MAChC+B,QAAQ,EAAEhB;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFjC,OAAA;MAAA6B,QAAA,GAAG,WACQ,EAACpB,GAAG,GAAG,CAAC,EAAC,MAAI,EAACN,SAAS,CAACsB,MAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC/B,EAAA,CAvCQD,IAAI;EAAA,QAOMH,WAAW;AAAA;AAAAuC,EAAA,GAPrBpC,IAAI;AAyCb,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}